<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ArquivosAnexos', 'doctrine');

/**
 * BaseArquivosAnexos
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_pasta
 * @property integer $id_usuario
 * @property integer $id_tipo_conjunto
 * @property integer $id_conjunto
 * @property integer $id_video
 * @property integer $id_imagem
 * @property integer $id_documento
 * 
 * @method integer        getIdPasta()          Returns the current record's "id_pasta" value
 * @method integer        getIdUsuario()        Returns the current record's "id_usuario" value
 * @method integer        getIdTipoConjunto()   Returns the current record's "id_tipo_conjunto" value
 * @method integer        getIdConjunto()       Returns the current record's "id_conjunto" value
 * @method integer        getIdVideo()          Returns the current record's "id_video" value
 * @method integer        getIdImagem()         Returns the current record's "id_imagem" value
 * @method integer        getIdDocumento()      Returns the current record's "id_documento" value
 * @method ArquivosAnexos setIdPasta()          Sets the current record's "id_pasta" value
 * @method ArquivosAnexos setIdUsuario()        Sets the current record's "id_usuario" value
 * @method ArquivosAnexos setIdTipoConjunto()   Sets the current record's "id_tipo_conjunto" value
 * @method ArquivosAnexos setIdConjunto()       Sets the current record's "id_conjunto" value
 * @method ArquivosAnexos setIdVideo()          Sets the current record's "id_video" value
 * @method ArquivosAnexos setIdImagem()         Sets the current record's "id_imagem" value
 * @method ArquivosAnexos setIdDocumento()      Sets the current record's "id_documento" value
 * 
 * @package    robolivre
 * @subpackage model
 * @author     Max Guenes
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArquivosAnexos extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('arquivos_anexos');
        $this->hasColumn('id_pasta', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_usuario', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('id_tipo_conjunto', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_conjunto', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('id_video', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_imagem', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_documento', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}