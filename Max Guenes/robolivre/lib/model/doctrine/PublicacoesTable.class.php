<?php

/**
 * PublicacoesTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PublicacoesTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return object PublicacoesTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('Publicacoes');
    }

    public function publicar(Publicacoes $publicacao) {

        $id_usuario = $publicacao->getIdUsuario();
        $id_conteudo = Util::validaNullInserBanco($publicacao->getIdConteudo()); //==""? 'null':$publicacao->getIdConteudo();
        $id_tipo_conjunto = Util::validaNullInserBanco($publicacao->getIdTipoConjunto());//==""? 'null':$publicacao->getIdTipoConjunto();
        $id_conjunto = Util::validaNullInserBanco($publicacao->getIdConjunto());//==""? 'null':$publicacao->getIdConjunto();
        $id_diario_bordo = Util::validaNullInserBanco($publicacao->getIdDiarioBordo());//==""? 'null':$publicacao->getIdDiarioBordo();
        $id_pasta = Util::validaNullInserBanco($publicacao->getIdPasta());//==""? 'null':$publicacao->getIdPasta();
        $id_video = Util::validaNullInserBanco($publicacao->getIdVideo());//==""? 'null':$publicacao->getIdVideo();
        $id_imagem = Util::validaNullInserBanco($publicacao->getIdImagem());//==""? 'null':$publicacao->getIdImagem();
        $id_usuario_original = Util::validaNullInserBanco($publicacao->getIdUsuarioOriginal());//==""? 'null':$publicacao->getIdUsuarioOriginal();
        $id_publicacao_original = Util::validaNullInserBanco($publicacao->getIdPublicacaoOriginal());//==""? 'null':$publicacao->getIdPublicacaoOriginal();
        $id_usuario_referencia = Util::validaNullInserBanco($publicacao->getIdUsuarioReferencia());//==""? 'null':$publicacao->getIdUsuarioReferencia();
        $comentario = $publicacao->getComentario();
        $link = Util::validaNullInserBanco($publicacao->getLink());//==""? 'null':$publicacao->getLink();
        $data_publicacao = $publicacao->getDataPublicacao();


        $query = "INSERT INTO publicacoes 
            (id_usuario,
                id_conteudo,
                id_tipo_conjunto,
                id_conjunto,
                id_diario_bordo,
                id_pasta,
                id_video,
                id_imagem,
                id_usuario_original,
                id_publicacao_original,
                id_usuario_referencia,
                comentario,
                link,
                data_publicacao)
            VALUES ($id_usuario,
                $id_conteudo,
                $id_tipo_conjunto,
                $id_conjunto,
                $id_diario_bordo,
                $id_pasta,
                $id_video,
                $id_imagem,
                $id_usuario_original,
                $id_publicacao_original,
                $id_usuario_referencia,
                $comentario,
                $link,
                $data_publicacao)";
        $connection = Doctrine_Manager::getInstance()
                        ->getCurrentConnection()->getDbh();
        // Get Connection of Database  
        $statement = $connection->prepare($query);
        // Make Statement  
        $statement->execute();
    }

    public function getPublicacoesDoPerfil($id_usuario) {
        $arrayRetorno = array();
                    
        $query = "SELECT p.*,u.nome,p.id_usuario
        FROM publicacoes p LEFT JOIN usuarios u 
        ON u.id_usuario = p.id_usuario
        WHERE p.visivel =  1 AND (p.id_usuario = $id_usuario OR p.id_usuario_original = $id_usuario OR p.id_usuario_referencia = $id_usuario)";
        
        $connection = Doctrine_Manager::getInstance()
                        ->getCurrentConnection()->getDbh();
        // Get Connection of Database  

        $statement = $connection->prepare($query);
        // Make Statement  

        $statement->execute();
        // Execute Query  

        $resultado = $statement->fetchAll();

        if ($resultado) {
            foreach ($resultado as $reg) {

                //se já existe um objeto instanciado com esse id, não precisa instanciar novamente
                if (isset($arrayRetorno[$reg['id_publicacao']])) {
                    $publicacao = $arrayRetorno[$reg['id_publicacao']];
                } else {
                    $publicacao = new Publicacoes();
                }

                $publicacao->setDataPublicacao($reg['data_publicacao']);
                $publicacao->setLink($reg['link']);
                $publicacao->setComentario($reg['comentario']);
                $publicacao->setIdUsuarioReferencia($reg['id_usuario_referencia']);
                $publicacao->setIdPublicacaoOriginal($reg['id_publicacao_original']);
                $publicacao->setIdUsuarioOriginal($reg['id_usuario_original']);
                $publicacao->setIdImagem($reg['id_imagem']);
                $publicacao->setIdVideo($reg['id_video']);
                $publicacao->setIdPasta($reg['id_pasta']);
                $publicacao->setIdDiarioBordo($reg['id_diario_bordo']);
                $publicacao->setIdConjunto($reg['id_conjunto']);
                $publicacao->setIdTipoConjunto($reg['id_tipo_conjunto']);
                $publicacao->setIdConteudo($reg['id_conteudo']);
                $publicacao->setIdUsuario($reg['id_usuario']);
                $publicacao->setIdPublicacao($reg['id_publicacao']);
                $publicacao->setNomeUsuario($reg['nome']);
                                //Util::pre($reg); die();
                
                //É um comentário de uma publicação
                if ($publicacao->getIdPublicacaoOriginal() != null && $publicacao->getIdUsuarioOriginal() != null) {

                    //se no array, existir a publicação original, é so adicionar o comentario no objeto
                    if (isset($arrayRetorno[$publicacao->getIdPublicacaoOriginal()])) {
                        $arrayRetorno[$publicacao->getIdPublicacaoOriginal()]->adicionarComentario($publicacao);
                    }//senão, cria um objeto temporário
                    else {
                        $arrayRetorno[$publicacao->getIdPublicacaoOriginal()] = new Publicacoes();
                        $arrayRetorno[$publicacao->getIdPublicacaoOriginal()]->adicionarComentario($publicacao);
                    }
                } else {
                    $arrayRetorno[$publicacao->getIdPublicacao()] = $publicacao;
                }
            }
            
            foreach(array_keys($arrayRetorno) as $chave){
                if($arrayRetorno[$chave]->getIdPublicacao() == ""){
                    $array = $arrayRetorno[$chave]->getComentarios();
                    $arrayRetorno[$chave] = $this->findOneBy("id_publicacao", $array[0]->getIdPublicacaoOriginal());
                    $arrayRetorno[$chave]->setComentarios(array_reverse($array));
                }
            }
        }

        return $arrayRetorno;
    }

}